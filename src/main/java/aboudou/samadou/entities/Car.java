package aboudou.samadou.entities;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.google.common.base.Objects;

/**
 * This class represent the Car object. This is the vehicule that client 
 * of the app want to reserve
 * 
 * @author absare
 *
 */

@Entity
@Table(name = "cars", uniqueConstraints=@UniqueConstraint(name="matricule_car_uc", 
columnNames="matricule"))
public class Car implements Serializable {
	
	/** Serial number used for serialisation/deserialisation*/
	private static final long serialVersionUID = 1L;

	/** Unique identifier when a car is added in database, autogenerated */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private Long id;
	
	/** Car marticule which is display back of car */
	@Column(name="matricule", unique=true)
	private String matricule;
	
	/** The marque of the car(Ford, Peugot....) */
	private String marque;
	
	/** Number of people that the car can contains */
	private int place;
	
	/** Indicates if the car can be reserved or not .<code>true</code>
	 * The car is available and can be reserve*/
	private boolean disponibilite;

	/**
	 * Default constructor
	 */
	public Car() {
		super();
	}

	/**
	 *  Constructor with parameters.
	 * 
	 * @param matricule Matricule back of the car
	 * @param marque Marque to which the car belongs to
	 * @param place Number of place of the car
	 * @param disponibilite Indicate if the car can be reserve or not
	 */
	public Car(String matricule, String marque, int place, boolean disponibilite) {
		super();
		this.matricule = matricule;
		this.marque = marque;
		this.place = place;
		this.disponibilite = disponibilite;
	}

	/**
	 * Method that returns the id of Car entity
	 * 
	 * @return unique identification of the car
	 */
	public Long getId() {
		return id;
	}

	/**
	 * Method that set the car identifier 
	 * 
	 * @param id unique identifier of car
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Method to get the car matricule
	 * @return return the matricule of a car
	 */
	public String getMatricule() {
		return matricule;
	}

	/**
	 * Method that returns the set matricule
	 * 
	 * @param matricule the matricule of a car
	 */
	public void setMatricule(String matricule) {
		this.matricule = matricule;
	}

	/**
	 * Method to get the car marque
	 * @return marque of a car
	 */
	public String getMarque() {
		return marque;
	}

	/**
	 * Method to set the car marque
	 * @param marque marque of a car
	 */
	public void setMarque(String marque) {
		this.marque = marque;
	}
	
	/**
	 * Method to get the number of place of the car
	 * @return number of place of the car
	 */
	public int getPlace() {
		return place;
	}
	
	/**
	 * Method to set the number of place of the car
	 * @param place number of place of the car
	 */
	public void setPlace(int place) {
		this.place = place;
	}
	
	/**
	 * Method to get the disponibiliy of a car
	 * @return the disponibility of the car, if a client car reserve it or not
	 */
	public boolean isdisponibilite() {
		return disponibilite;
	}
	
	/**
	 * Method to set the disponibiliy of a car
	 * @param disponibilite the disponibility of the car, if a client car reserve it or not
	 */
	public void setdisponibilite(boolean disponibilite) {
		this.disponibilite = disponibilite;
	}

	/**
	 * toString method overriding
	 */
	@Override
	public String toString() {
		StringBuilder result = new StringBuilder();
		result.append("Car [id=");
		result.append(this.id);
		result.append(", matricule=");
		result.append(this.matricule);
		result.append(", marque=");
		result.append(this.marque);
		result.append(", place=");
		result.append(this.place);
		result.append(", disponibilite=");
		result.append(this.disponibilite);
		result.append("]");
		return result.toString();
	}

	/**
	 * hashCode method overriding
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (disponibilite ? 1231 : 1237);
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((marque == null) ? 0 : marque.hashCode());
		result = prime * result + ((matricule == null) ? 0 : matricule.hashCode());
		result = prime * result + place;
		return result;
	}

	/**
	 * equals method overriding
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Car other = (Car) obj;
		
		return Objects.equal(disponibilite, other.disponibilite)
			&& Objects.equal(id, other.id)
			&& Objects.equal(marque, other.marque)
			&& Objects.equal(matricule, other.matricule)
			&& Objects.equal(place, other.place);
		
	}

	
}
